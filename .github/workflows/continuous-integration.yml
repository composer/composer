name: "Continuous Integration"

on:
  push:
    paths-ignore:
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'doc/**'

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"
  COMPOSER_UPDATE_FLAGS: ""

permissions:
  contents: read

jobs:
  tests:
    name: "CI"

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        dependencies: [locked]
        os: [ubuntu-latest]
        experimental: [false]
        include:
          - php-version: "7.2"
            dependencies: highest
            os: ubuntu-latest
            experimental: false
          - php-version: "7.2"
            dependencies: lowest
            os: ubuntu-latest
            experimental: false
          - php-version: "8.3"
            dependencies: highest
            os: ubuntu-latest
            experimental: false
          - php-version: "8.3"
            os: windows-latest
            dependencies: locked
            experimental: false
          - php-version: "8.3"
            os: macos-latest
            dependencies: locked
            experimental: false
          - php-version: "8.4"
            dependencies: lowest-ignore
            os: ubuntu-latest
            experimental: true
          - php-version: "8.4"
            dependencies: highest-ignore
            os: ubuntu-latest
            experimental: true

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0, error_reporting=E_ALL, display_errors=On"
          php-version: "${{ matrix.php-version }}"
          tools: composer

      - name: "Handle lowest dependencies update"
        if: "contains(matrix.dependencies, 'lowest')"
        run: |
          echo "COMPOSER_UPDATE_FLAGS=$COMPOSER_UPDATE_FLAGS --prefer-lowest" >> $GITHUB_ENV
          echo "COMPOSER_LOWEST_DEPS_TEST=1" >> $GITHUB_ENV

      - name: "Handle ignore-platform-reqs dependencies update"
        if: "contains(matrix.dependencies, 'ignore')"
        run: "echo \"COMPOSER_FLAGS=$COMPOSER_FLAGS --ignore-platform-req=php\" >> $GITHUB_ENV"

      - name: "Remove platform config to get latest dependencies for current PHP version when build is not locked"
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: "composer config platform --unset"

      - name: "Allow alpha releases for latest-deps builds to catch problems earlier"
        if: "contains(matrix.dependencies, 'highest')"
        run: "composer config minimum-stability alpha"

      - name: "Update dependencies from composer.json using composer binary provided by system"
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: "composer update ${{ env.COMPOSER_UPDATE_FLAGS }} ${{ env.COMPOSER_FLAGS }}"

      - name: "Install dependencies from composer.lock using composer binary provided by system"
        if: "matrix.dependencies == 'locked'"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Run install again using composer binary from source"
        run: "bin/composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Make source binary the one used by default (Linux / macOS)"
        if: "!contains(matrix.os, 'windows')"
        run: |
          echo -e "$(pwd)/bin\n$(cat $GITHUB_PATH)" > $GITHUB_PATH
          echo -e "COMPOSER_BINARY=$(pwd)/bin/composer" >> $GITHUB_ENV

      - name: "Make source binary the one used by default (Windows)"
        if: "contains(matrix.os, 'windows')"
        run: |
          $(
              (echo "$(Get-Location)\bin")
              (Get-Content $env:GITHUB_PATH -Raw)
          ) | Set-Content $env:GITHUB_PATH
          echo "COMPOSER_BINARY=$(Get-Location)\bin\composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: "Prepare git environment"
        run: "git config --global user.name composer && git config --global user.email composer@example.com"

      - name: "Run tests"
        if: "matrix.php-version != '7.3'"
        run: "vendor/bin/simple-phpunit --verbose"

      - name: "Run complete test suite on 7.3"
        if: "matrix.php-version == '7.3'"
        run: "vendor/bin/simple-phpunit --configuration tests/complete.phpunit.xml"

  validation:
    name: "Composer validation"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0, error_reporting=E_ALL, display_errors=On"
          php-version: "7.4"
          tools: composer

      - name: "Install dependencies"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Validate composer.json"
        run: "bin/composer validate --strict"
