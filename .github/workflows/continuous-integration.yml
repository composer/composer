name: "Continuous Integration"

on:
  push:
    paths-ignore:
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'doc/**'

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"
  COMPOSER_UPDATE_FLAGS: ""

permissions:
  contents: read

jobs:
  tests:
    name: "CI"

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        php-version:
          - "5.3"
          - "5.4"
          - "5.5"
          - "5.6"
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.4"
        dependencies: [locked]
        os: [ubuntu-latest]
        experimental: [false]
        include:
          - php-version: "5.3"
            dependencies: highest
            os: ubuntu-latest
            experimental: false
          - php-version: "5.3"
            dependencies: lowest
            os: ubuntu-latest
            experimental: false
          - php-version: "7.4"
            os: windows-latest
            dependencies: locked
            experimental: false
          - php-version: "7.4"
            os: macos-latest
            dependencies: locked
            experimental: false
          - php-version: "7.4"
            dependencies: lowest
            os: ubuntu-latest
            experimental: false
          - php-version: "7.4"
            dependencies: highest
            os: ubuntu-latest
            experimental: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0, error_reporting=E_ALL, display_errors=On"
          php-version: "${{ matrix.php-version }}"
          tools: composer

      - name: "Handle lowest dependencies update"
        if: "contains(matrix.dependencies, 'lowest')"
        run: "echo \"COMPOSER_UPDATE_FLAGS=$COMPOSER_UPDATE_FLAGS --prefer-lowest\" >> $GITHUB_ENV"

      - name: "Handle ignore-platform-reqs dependencies update"
        if: "contains(matrix.dependencies, 'ignore')"
        run: "echo \"COMPOSER_FLAGS=$COMPOSER_FLAGS --ignore-platform-req=php\" >> $GITHUB_ENV"

      - name: "Remove platform config to get latest dependencies for current PHP version when build is not locked"
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: "composer config platform --unset"

      - name: "Allow alpha releases for latest-deps builds to catch problems earlier"
        if: "contains(matrix.dependencies, 'highest')"
        run: "composer config minimum-stability alpha"

      - name: "Update dependencies from composer.json using composer binary provided by system"
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: "composer update ${{ env.COMPOSER_UPDATE_FLAGS }} ${{ env.COMPOSER_FLAGS }}"

      - name: "Install dependencies from composer.lock using composer binary provided by system"
        if: "matrix.dependencies == 'locked'"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Remove platform config"
        run: composer config platform --unset

      - name: "Require latest PHPUnitBridge for PHP 8.x"
        if: "startsWith(matrix.php-version, '8.')"
        # using ~ here to avoid issues with windows CLI removing the ^
        run: 'composer require --no-update --dev "symfony/phpunit-bridge"'

      - name: "Set ignored deprecations for php 8.1+ on lowest or locked deps"
        if: "matrix.php-version >= '8.1' && !contains(matrix.dependencies, 'highest')"
        run: "echo \"SYMFONY_DEPRECATIONS_HELPER=baselineFile=./tests/deprecations-8.1.json&max[direct]=0\" >> $GITHUB_ENV"

      - name: "Update dev requirements to latest available for the current PHP even on locked builds as they are not bundled dependencies"
        run: "composer update ${{ env.COMPOSER_FLAGS }} -W symfony/phpunit-bridge phpspec/prophecy phpdocumentor/* sebastian/* doctrine/instantiator"

      - name: "Run install again using composer binary from source"
        run: "bin/composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Prepare git environment"
        run: "git config --global user.name composer && git config --global user.email composer@example.com"

      - name: "Run tests"
        if: "matrix.php-version != '7.3'"
        run: "vendor/bin/simple-phpunit --verbose"

      - name: "Run complete test suite on 7.3"
        if: "matrix.php-version == '7.3'"
        run: "vendor/bin/simple-phpunit --configuration tests/complete.phpunit.xml"

  validation:
    name: "Composer validation"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0, error_reporting=E_ALL, display_errors=On"
          php-version: "7.4"
          tools: composer

      - name: "Install dependencies"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Validate composer.json"
        run: "bin/composer validate --strict"
